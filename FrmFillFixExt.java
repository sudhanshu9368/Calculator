/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package newsystem;
import java.awt.HeadlessException;
import java.sql.*;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.TableColumn;
import javax.swing.table.TableColumnModel;
import javax.swing.table.TableModel;
/**
 *
 * @author JaiShriRam
 */
public class FrmFillFixExt extends javax.swing.JInternalFrame {
    Statement stripName_st,stripData_st,tempAdd_st,getTempStrip_st,selectInsert_st,showData_st,getData_st=null;
    ResultSet stripName_rs,stripData_rs,getTempStrip_rs,saveData_rs,selectInsert_rs,showData_rs,getData_rs=null;
    String strip = null;
    String selectStrip = null;
    int selectedRow;
    Connection co = null;
    PreparedStatement saveData_ps=null;
    /**
     * Creates new form FrmFillFixExt
     */
    public FrmFillFixExt() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        sheet_name = new javax.swing.JLabel();
        month = new javax.swing.JLabel();
        year = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        strip_name = new javax.swing.JLabel();
        S1_0 = new javax.swing.JTextField();
        S1_1 = new javax.swing.JTextField();
        S1_2 = new javax.swing.JTextField();
        S1_3 = new javax.swing.JTextField();
        S1_4 = new javax.swing.JTextField();
        S1_5 = new javax.swing.JTextField();
        S1_6 = new javax.swing.JTextField();
        S1_7 = new javax.swing.JTextField();
        S1_8 = new javax.swing.JTextField();
        S1_9 = new javax.swing.JTextField();
        btnContinue1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        btnSaveRow = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        Select_Strip = new javax.swing.JComboBox<>();
        btnCalculate = new javax.swing.JButton();
        cmbYear = new javax.swing.JComboBox<>();
        cmbMonth = new javax.swing.JComboBox<>();
        showData = new javax.swing.JButton();

        setClosable(true);
        setMaximizable(true);
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameOpened(evt);
            }
        });
        getContentPane().setLayout(new java.awt.FlowLayout());

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        sheet_name.setFont(new java.awt.Font("Bodoni MT", 1, 24)); // NOI18N
        sheet_name.setForeground(new java.awt.Color(15, 48, 161));
        sheet_name.setText(" Fixed Internal Sheet");
        jPanel1.add(sheet_name, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 30, 260, 36));

        month.setFont(new java.awt.Font("Bodoni MT", 1, 16)); // NOI18N
        month.setForeground(new java.awt.Color(15, 41, 161));
        month.setText("Month");
        jPanel1.add(month, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 60, 45, 24));

        year.setFont(new java.awt.Font("Bodoni MT", 1, 16)); // NOI18N
        year.setForeground(new java.awt.Color(15, 48, 161));
        year.setText("Year");
        jPanel1.add(year, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 30, 44, -1));

        strip_name.setFont(new java.awt.Font("Bodoni MT", 1, 14)); // NOI18N
        strip_name.setForeground(new java.awt.Color(15, 48, 161));
        strip_name.setText("Fixed Strip");

        S1_0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                S1_0ActionPerformed(evt);
            }
        });

        S1_7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                S1_7ActionPerformed(evt);
            }
        });

        S1_8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                S1_8ActionPerformed(evt);
            }
        });

        btnContinue1.setFont(new java.awt.Font("Bodoni MT", 1, 18)); // NOI18N
        btnContinue1.setForeground(new java.awt.Color(15, 41, 161));
        btnContinue1.setText("Continue To CheckOut");
        btnContinue1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnContinue1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(strip_name, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(S1_0, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(S1_1, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(S1_2, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(S1_3, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(S1_4, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(S1_5, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(S1_6, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(S1_7, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(S1_8, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(S1_9, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addComponent(btnContinue1)
                .addGap(364, 364, 364))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(S1_9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(S1_8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(S1_7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(S1_6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(S1_5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(S1_4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(S1_3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(S1_2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(S1_1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(S1_0, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(strip_name, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnContinue1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 550, 1140, -1));

        jTable1.setFont(new java.awt.Font("Bodoni MT", 1, 10)); // NOI18N
        jTable1.setForeground(new java.awt.Color(15, 48, 161));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, "", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, "", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Serial No.", "Generated No.", "0i", "0e", "1i", "1e", "2i", "2e", "3i", "3e", "4i", "4e", "5i", "5e", "6i", "6e", "7i", "7e", "8i", "8e", "9i", "9e"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, true, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setAlignmentX(5.5F);
        jTable1.setGridColor(new java.awt.Color(102, 102, 102));
        jTable1.setIntercellSpacing(new java.awt.Dimension(2, 2));
        jTable1.setRowHeight(23);
        jTable1.setSelectionBackground(new java.awt.Color(204, 204, 204));
        jTable1.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jTable1);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(34, 132, 1136, 342));

        btnSaveRow.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnSaveRow.setForeground(new java.awt.Color(15, 48, 161));
        btnSaveRow.setText("Save Data");
        btnSaveRow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveRowActionPerformed(evt);
            }
        });
        jPanel1.add(btnSaveRow, new org.netbeans.lib.awtextra.AbsoluteConstraints(970, 590, 203, -1));

        jLabel2.setFont(new java.awt.Font("Bodoni MT", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(15, 48, 161));
        jLabel2.setText("Choose Your Strip");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(34, 482, 189, 36));

        Select_Strip.setFont(new java.awt.Font("Bodoni MT", 1, 12)); // NOI18N
        Select_Strip.setForeground(new java.awt.Color(15, 48, 161));
        Select_Strip.setToolTipText("Select Strip..");
        Select_Strip.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 102, 153)));
        Select_Strip.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Select_StripActionPerformed(evt);
            }
        });
        jPanel1.add(Select_Strip, new org.netbeans.lib.awtextra.AbsoluteConstraints(233, 494, 208, -1));

        btnCalculate.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnCalculate.setForeground(new java.awt.Color(15, 48, 161));
        btnCalculate.setText("Calculate");
        btnCalculate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCalculateActionPerformed(evt);
            }
        });
        jPanel1.add(btnCalculate, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 100, 102, -1));

        cmbYear.setFont(new java.awt.Font("Bodoni MT", 1, 14)); // NOI18N
        cmbYear.setForeground(new java.awt.Color(15, 48, 161));
        cmbYear.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--Select Year--", "1990", "1991", "1992", "1993", "1994", "1995", "1996", "1997", "1998", "1999", "2000", "2001", "2002", "2003", "2004", "2005", "2006", "2007", "2008", "2009", "2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019", "2020", "2021", "2022", "2023", "2024", "2025", "2026", "2027", "2028", "2029", "2030" }));
        jPanel1.add(cmbYear, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 30, 130, -1));

        cmbMonth.setFont(new java.awt.Font("Bodoni MT", 1, 14)); // NOI18N
        cmbMonth.setForeground(new java.awt.Color(15, 48, 161));
        cmbMonth.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--Select Month--", "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December", " " }));
        cmbMonth.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbMonthItemStateChanged(evt);
            }
        });
        cmbMonth.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbMonthActionPerformed(evt);
            }
        });
        jPanel1.add(cmbMonth, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 60, 130, -1));

        showData.setFont(new java.awt.Font("Bodoni MT", 1, 14)); // NOI18N
        showData.setForeground(new java.awt.Color(15, 48, 161));
        showData.setText("Show");
        showData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showDataActionPerformed(evt);
            }
        });
        jPanel1.add(showData, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 60, -1, -1));

        getContentPane().add(jPanel1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void S1_0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_S1_0ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_S1_0ActionPerformed

    private void S1_7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_S1_7ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_S1_7ActionPerformed

    private void S1_8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_S1_8ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_S1_8ActionPerformed

    private void btnContinue1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnContinue1ActionPerformed
        co = DataBaseConnection.ConnectDB();
        try {

            String s0 = S1_0.getText();
            String s1 = S1_1.getText();
            String s2 = S1_2.getText();
            String s3 = S1_3.getText();
            String s4 = S1_4.getText();
            String s5 = S1_5.getText();
            String s6 = S1_6.getText();
            String s7 = S1_7.getText();
            String s8 = S1_8.getText();
            String s9 = S1_9.getText();

            selectStrip = Select_Strip.getSelectedItem().toString();
            String tempAdd = "update temp_strip set strip_name='" + selectStrip + "','0'='" + s0 + "','1'='" + s1 + "','2'='" + s2 + "','3'='" + s3 + "','4'='" + s4 + "','5'='" + s5 + "','6'='" + s6 + "','7'='" + s7 + "','8'='" + s8 + "','9'='" + s9 + "' where Strip_id='1'";
            tempAdd_st = co.createStatement();
            tempAdd_st.execute(tempAdd);
            JOptionPane.showMessageDialog(null, "Now Calculate the result");
        } catch (HeadlessException | SQLException ex) {
            System.out.println(ex);
        }
        finally{
            try {
                co.close();
            } catch (SQLException ex) {
                Logger.getLogger(FrmFillFixExt.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnContinue1ActionPerformed

    private void btnSaveRowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveRowActionPerformed
        co = DataBaseConnection.ConnectDB();
        try{
            //          co=DataBaseConnection.ConnectDB();
            String Cmonth=(String) cmbMonth.getSelectedItem();
            String Cyear=(String)cmbYear.getSelectedItem();
            String serial_no[][]=new String[31][22];
            ArrayList<String> list=new ArrayList();
            int count=0;
            String saveData="insert into MovableInternal(date,month,year,'0L','0R','1L','1R','2L','2R','3L','3R','4L','4R','5L','5R','6L','6R','7L','7R','8L','8R','9L','9R',g_no) values(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?);";

            saveData_ps=co.prepareStatement(saveData);
            TableModel model = jTable1.getModel();

            int totalRow = model.getRowCount();
            System.out.println(totalRow);
            for(int ad = 0; ad < 31; ad++)
            {
                serial_no[ad][0] = (String) jTable1.getValueAt(ad, 0);
                if(serial_no[ad][0]!=null)
                {
                    list.add(serial_no[ad][0]);
                    System.out.println("data["+ad+"]["+0+"]=" +serial_no[ad][0]);
                }

            }

            for (int g = 0; g < list.size(); g++) {
                String number = list.get(g);
                System.out.println(number);
                count++;
                System.out.println(count);
                String selectInsert = "select * from MovableInternal where date='" +number+ "',month='" +Cmonth+ "',year='" +Cyear+ "'";
                selectInsert_st = co.createStatement();
                selectInsert_rs = selectInsert_st.executeQuery(selectInsert);
                if(selectInsert_rs.next()) {

                }
                else{

                    String date =(String) jTable1.getValueAt(g, 0);
                    String g_n = (String) jTable1.getValueAt(g, 1);
                    String zin = (String) jTable1.getValueAt(g, 2);
                    String zex = (String) jTable1.getValueAt(g, 3);
                    String oin = (String) jTable1.getValueAt(g, 4);
                    String oex = (String) jTable1.getValueAt(g, 5);
                    String tin = (String) jTable1.getValueAt(g, 6);
                    String tex = (String) jTable1.getValueAt(g, 7);
                    String threein = (String) jTable1.getValueAt(g, 8);
                    String threeex = (String) jTable1.getValueAt(g, 9);
                    String fin = (String) jTable1.getValueAt(g, 10);
                    String fex = (String) jTable1.getValueAt(g, 11);
                    String fvin = (String) jTable1.getValueAt(g, 12);
                    String fvex = (String) jTable1.getValueAt(g, 13);
                    String sixin = (String) jTable1.getValueAt(g, 14);
                    String sixex = (String) jTable1.getValueAt(g, 15);
                    String sevin = (String) jTable1.getValueAt(g, 16);
                    String sevex = (String) jTable1.getValueAt(g, 17);
                    String eightin = (String) jTable1.getValueAt(g, 18);
                    String eightex = (String) jTable1.getValueAt(g, 19);
                    String nineteenin = (String) jTable1.getValueAt(g, 20);
                    String nineteenex = (String) jTable1.getValueAt(g, 21);

                    saveData_ps.setString(1, date);
                    saveData_ps.setString(2, Cmonth);
                    saveData_ps.setString(3, Cyear);
                    saveData_ps.setString(4, zin);
                    saveData_ps.setString(5, zex);
                    saveData_ps.setString(6, oin);
                    saveData_ps.setString(7, oex);
                    saveData_ps.setString(8, tin);
                    saveData_ps.setString(9, tex);
                    saveData_ps.setString(10, threein);
                    saveData_ps.setString(11, threeex);
                    saveData_ps.setString(12, fin);
                    saveData_ps.setString(13, fex);
                    saveData_ps.setString(14, fvin);
                    saveData_ps.setString(15, fvex);
                    saveData_ps.setString(16, sixin);
                    saveData_ps.setString(17, sixex);
                    saveData_ps.setString(18, sevin);
                    saveData_ps.setString(19, sevex);
                    saveData_ps.setString(20, eightin);
                    saveData_ps.setString(21, eightex);
                    saveData_ps.setString(22, nineteenin);
                    saveData_ps.setString(23, nineteenex);
                    saveData_ps.setString(24, g_n);
                    saveData_ps.execute();

                }

            }
            JOptionPane.showMessageDialog(null, "data saved..!!");

        } catch (HeadlessException | SQLException ex) {
            System.out.println(ex);
        }
        finally{
            try {
                co.close();
            } catch (SQLException ex) {
                Logger.getLogger(FrmFillFixExt.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnSaveRowActionPerformed

    private void Select_StripActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Select_StripActionPerformed
        co = DataBaseConnection.ConnectDB();
        try{
            String zero=null;
            String one=null;
            String two=null;
            String three=null;
            String four=null;
            String five=null;
            String six=null;
            String seven=null;
            String eight=null;
            String nine=null;
            selectStrip=Select_Strip.getSelectedItem().toString();
            String stripData="select * from strip where strip_name='"+selectStrip+"'";
            stripData_st=co.createStatement();
            stripData_rs=stripData_st.executeQuery(stripData);
            if(stripData_rs.next())
            {
                zero =stripData_rs.getString("0");
                one =stripData_rs.getString("1");
                two =stripData_rs.getString("2");
                three =stripData_rs.getString("3");
                four=stripData_rs.getString("4");
                five =stripData_rs.getString("5");
                six =stripData_rs.getString("6");
                seven =stripData_rs.getString("7");
                eight=stripData_rs.getString("8");
                nine =stripData_rs.getString("9");
                System.out.print(nine);
            }

            S1_0.setText(zero);
            S1_1.setText(one);
            S1_2.setText(two);
            S1_3.setText(three);
            S1_4.setText(four);
            S1_5.setText(five);
            S1_6.setText(six);
            S1_7.setText(seven);
            S1_8.setText(eight);
            S1_9.setText(nine);

        }
        catch(SQLException ex)
        {
            System.out.println(ex);
        }
        finally{
            try {
                co.close();
            } catch (SQLException ex) {
                Logger.getLogger(FrmFillFixExt.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_Select_StripActionPerformed

    private void btnCalculateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCalculateActionPerformed
        co = DataBaseConnection.ConnectDB();
        try{
            TableModel model = jTable1.getModel();
            int rRow[] = jTable1.getSelectedRows();
            String[][] data=new String[31][22];
            int lastNumber = rRow.length;
            System.out.println(lastNumber);
            System.out.println(rRow[0]);
            for(int i=0;i<lastNumber;i++)
            {
                int rowIndex = rRow[i];
                data[rowIndex][1]=(String)model.getValueAt(rowIndex,1);
                System.out.println("data["+rowIndex+"]["+1+"]=" +data[rowIndex][1]);
            }

            String s0=null;
            String s1=null;
            String s2=null;
            String s3=null;
            String s4=null;
            String s5=null;
            String s6=null;
            String s7=null;
            String s8=null;
            String s9=null;

            String getTempStrip="select * from temp_strip";
            getTempStrip_st = co.createStatement();
            getTempStrip_rs = getTempStrip_st.executeQuery(getTempStrip);
            if(getTempStrip_rs.next())
            {
                s0=getTempStrip_rs.getString("0");
                s1=getTempStrip_rs.getString("1");
                s2=getTempStrip_rs.getString("2");
                s3=getTempStrip_rs.getString("3");
                s4=getTempStrip_rs.getString("4");
                s5=getTempStrip_rs.getString("5");
                s6=getTempStrip_rs.getString("6");
                s7=getTempStrip_rs.getString("7");
                s8=getTempStrip_rs.getString("8");
                s9=getTempStrip_rs.getString("9");
                System.out.println(s0);
                if(s0 == "")
                {
                    System.out.println("In rs. next");
                    JOptionPane.showMessageDialog(null,"select the strip First");
                }else{
                    String[] actualScript = new String[10];
                    String[] rotatedScript = new String[10];
                    actualScript[0] = s0;
                    actualScript[1] = s1;
                    actualScript[2] = s2;
                    actualScript[3] = s3;
                    actualScript[4] = s4;
                    actualScript[5] = s5;
                    actualScript[6] = s6;
                    actualScript[7] = s7;
                    actualScript[8] = s8;
                    actualScript[9] = s9;

                    for(int i =0; i<10; i++){
                        System.out.println(actualScript[i]);
                    }

                    System.out.println("ENter The first No. : - ");
                    String firstNo;
                    String CurrentNo;

                    for(int i=0;i<lastNumber;i++)
                    {
                        int rowIndex = rRow[i];
                        data[rowIndex][1]=(String)model.getValueAt(rowIndex,1);

                        CurrentNo=data[rowIndex][1];
                        firstNo=(String)model.getValueAt(rowIndex-1,1);
                        int j;
                        char fstno = firstNo.charAt(0);
                        for(j=0; j<10; j++){
                            char matchFst = actualScript[j].charAt(0);
                            if(fstno == matchFst){
                                break;
                            }
                        }
                        System.out.println(j);
                        int l;
                        for(l=0; j<10; l++){
                            rotatedScript[l] = actualScript[j];
                            j++;
                        }
                        int f=0;
                        for(int k=l ; k<10; k++){
                            rotatedScript[k] = actualScript[f];
                            f++;
                        }
                        //		for(int a = 0; a<10; a++){
                            //			System.out.print(rotatedScript[a]+" ");
                            //                    }
                        //                }

                    System.out.println(Arrays.toString(rotatedScript));
                    System.out.println("Current Number : - "+ CurrentNo);
                    char internalNumber = CurrentNo.charAt(0);
                    char externalNumber = CurrentNo.charAt(1);

                    System.out.println("Internal No:-"+internalNumber);
                    System.out.println("External No:-"+externalNumber);

                    for(int cs=0; cs<20; cs+=2){
                        String sn = rotatedScript[cs/2];
                        if(sn.indexOf(internalNumber) != -1){
                            model.setValueAt("*", rowIndex, cs+2);
                        }else{
                            model.setValueAt(null, rowIndex, cs+2);
                        }
                    }
                    for(int cs=0; cs<20; cs+=2){
                        String sn = rotatedScript[cs/2];
                        if(sn.indexOf(externalNumber) != -1){
                            model.setValueAt("*", rowIndex, cs+3);
                        }else{
                            model.setValueAt(null, rowIndex, cs+3);
                        }
                    }
                    /********************************My Code*************************************************/
                    //		int j;
                    //		char fstno = firstNo.charAt(0);
                    //		for(j=0; j<10; j++){
                        //			char matchFst = actualScript[j].charAt(0);
                        //			if(fstno == matchFst){
                            //				break;
                            //			}
                        //		}
                    //		System.out.println(j);
                    //		int l;
                    //		for(l=0; j<10; l++){
                        //			rotatedScript[l] = actualScript[j];
                        //			j++;
                        //		}
                    //		int f=0;
                    //		for(int k=l ; k<10; k++){
                        //			rotatedScript[k] = actualScript[f];
                        //			f++;
                        //		}
                    //
                    //		for(int a = 0; a<10; a++){
                        //			System.out.print(rotatedScript[a]+" ");
                        //		}
                    /********************************My Code************************************************/
                }
            }
        }
        else{
            JOptionPane.showMessageDialog(null,"Please select the strip First");
        }

        }
        catch(HeadlessException | SQLException ex)
        {
            System.out.println(ex);
        }
        finally{
            try {
                co.close();
            } catch (SQLException ex) {
                Logger.getLogger(FrmFillFixExt.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        
    }//GEN-LAST:event_btnCalculateActionPerformed

    private void cmbMonthItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbMonthItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbMonthItemStateChanged

    private void cmbMonthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbMonthActionPerformed
        ////        String Cyear=(String) cmbMonth.getSelectedItem();
        ////        String Cmonth=(String)cmbYear.getSelectedItem();
        ////        ArrayList<String> Slist=new ArrayList();
        ////        try{
            ////           String showData="select * from MovableInternal where year='"+Cyear+"' and month='"+Cmonth+"'";
            ////            showData_st=co.createStatement();
            ////            showData_rs=showData_st.executeQuery(showData);
            ////            while(showData_rs.next())
            ////            {
                ////               Slist.add(showData_rs.getString("date"));
                ////            }
            ////            System.out.println(Slist);
            ////            for(int add=0;add<Slist.size();add++)
            ////            {
                ////                String getData="select * from MovableInternal where year='"+Cyear+"' and month='"+Cmonth+"' and date='"+Slist.get(add)+"'";
                ////                getData_st=co.createStatement();
                ////                getData_rs=getData_st.executeQuery(getData);
                ////                if(getData_rs.next())
                ////                {
                    ////                   jTable1.setValueAt(getData_rs.getString("date"), add, 0);
                    ////                   jTable1.setValueAt(getData_rs.getString("g_no"), add, 1);
                    ////                   jTable1.setValueAt(getData_rs.getString("0L"), add, 2);
                    ////                   jTable1.setValueAt(getData_rs.getString("0R"), add, 3);
                    ////                   jTable1.setValueAt(getData_rs.getString("1L"), add, 4);
                    ////                   jTable1.setValueAt(getData_rs.getString("1R"), add, 5);
                    ////                   jTable1.setValueAt(getData_rs.getString("2L"), add, 6);
                    ////                   jTable1.setValueAt(getData_rs.getString("2R"), add, 7);
                    ////                   jTable1.setValueAt(getData_rs.getString("3L"), add, 8);
                    ////                   jTable1.setValueAt(getData_rs.getString("3R"), add, 9);
                    ////                   jTable1.setValueAt(getData_rs.getString("4L"), add, 10);
                    ////                   jTable1.setValueAt(getData_rs.getString("4R"), add, 11);
                    ////                   jTable1.setValueAt(getData_rs.getString("5L"), add, 12);
                    ////                   jTable1.setValueAt(getData_rs.getString("5R"), add, 13);
                    ////                   jTable1.setValueAt(getData_rs.getString("6L"), add, 14);
                    ////                   jTable1.setValueAt(getData_rs.getString("6R"), add, 15);
                    ////                   jTable1.setValueAt(getData_rs.getString("7L"), add, 16);
                    ////                   jTable1.setValueAt(getData_rs.getString("7R"), add, 17);
                    ////                   jTable1.setValueAt(getData_rs.getString("8L"), add, 18);
                    ////                   jTable1.setValueAt(getData_rs.getString("8R"), add, 19);
                    ////                   jTable1.setValueAt(getData_rs.getString("9L"), add, 20);
                    ////                   jTable1.setValueAt(getData_rs.getString("9R"), add, 21);
                    ////                }
                ////            }
            ////            System.out.println("End");
            ////        }
        ////        catch(Exception ex){
            ////            ex.printStackTrace();
            ////        }
        ////
        ////
        ////       // TODO add your handling code here:
    }//GEN-LAST:event_cmbMonthActionPerformed

    private void showDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showDataActionPerformed
        co = DataBaseConnection.ConnectDB();
        String Cmonth=(String) cmbMonth.getSelectedItem();
        String Cyear=(String)cmbYear.getSelectedItem();
        System.out.println(Cmonth);
        ArrayList<String> Slist=new ArrayList();
        try{
            String showData1="select * from MovableInternal where year='"+Cyear+"' and month='"+Cmonth+"'";
            showData_st=co.createStatement();
            showData_rs=showData_st.executeQuery(showData1);
            while(showData_rs.next())
            {
                Slist.add(showData_rs.getString("date"));
            }
            System.out.println(Slist);
            int SlistLength = Slist.size();
            int noDataLength = 31-SlistLength;
            for(int add=0;add<SlistLength;add++)
            {
                String getData="select * from MovableInternal where year='"+Cyear+"' and month='"+Cmonth+"' and date='"+Slist.get(add)+"'";
                getData_st=co.createStatement();
                getData_rs=getData_st.executeQuery(getData);
                if(getData_rs.next())
                {
                    jTable1.setValueAt(getData_rs.getString("date"), add, 0);
                    jTable1.setValueAt(getData_rs.getString("g_no"), add, 1);
                    jTable1.setValueAt(getData_rs.getString("0L"), add, 2);
                    jTable1.setValueAt(getData_rs.getString("0R"), add, 3);
                    jTable1.setValueAt(getData_rs.getString("1L"), add, 4);
                    jTable1.setValueAt(getData_rs.getString("1R"), add, 5);
                    jTable1.setValueAt(getData_rs.getString("2L"), add, 6);
                    jTable1.setValueAt(getData_rs.getString("2R"), add, 7);
                    jTable1.setValueAt(getData_rs.getString("3L"), add, 8);
                    jTable1.setValueAt(getData_rs.getString("3R"), add, 9);
                    jTable1.setValueAt(getData_rs.getString("4L"), add, 10);
                    jTable1.setValueAt(getData_rs.getString("4R"), add, 11);
                    jTable1.setValueAt(getData_rs.getString("5L"), add, 12);
                    jTable1.setValueAt(getData_rs.getString("5R"), add, 13);
                    jTable1.setValueAt(getData_rs.getString("6L"), add, 14);
                    jTable1.setValueAt(getData_rs.getString("6R"), add, 15);
                    jTable1.setValueAt(getData_rs.getString("7L"), add, 16);
                    jTable1.setValueAt(getData_rs.getString("7R"), add, 17);
                    jTable1.setValueAt(getData_rs.getString("8L"), add, 18);
                    jTable1.setValueAt(getData_rs.getString("8R"), add, 19);
                    jTable1.setValueAt(getData_rs.getString("9L"), add, 20);
                    jTable1.setValueAt(getData_rs.getString("9R"), add, 21);
                }
            }
            for(int ndL = SlistLength; ndL<noDataLength; ndL++){
                jTable1.setValueAt(null, ndL, 0);
                jTable1.setValueAt(null, ndL, 1);
                jTable1.setValueAt(null, ndL, 2);
                jTable1.setValueAt(null, ndL, 3);
                jTable1.setValueAt(null, ndL, 4);
                jTable1.setValueAt(null, ndL, 5);
                jTable1.setValueAt(null, ndL, 6);
                jTable1.setValueAt(null, ndL, 7);
                jTable1.setValueAt(null, ndL, 8);
                jTable1.setValueAt(null, ndL, 9);
                jTable1.setValueAt(null, ndL, 10);
                jTable1.setValueAt(null, ndL, 11);
                jTable1.setValueAt(null, ndL, 12);
                jTable1.setValueAt(null, ndL, 13);
                jTable1.setValueAt(null, ndL, 14);
                jTable1.setValueAt(null, ndL, 15);
                jTable1.setValueAt(null, ndL, 16);
                jTable1.setValueAt(null, ndL, 17);
                jTable1.setValueAt(null, ndL, 18);
                jTable1.setValueAt(null, ndL, 19);
                jTable1.setValueAt(null, ndL, 20);
                jTable1.setValueAt(null, ndL, 21);
            }
            System.out.println("End");
        }
        catch(SQLException ex){
            System.out.println(ex);
        }
        finally{
            try {
                co.close();
            } catch (SQLException ex) {
                Logger.getLogger(FrmFillFixExt.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_showDataActionPerformed

    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened
        TableColumnModel tcm = jTable1.getColumnModel();
        for (int i = 2; i < jTable1.getColumnModel().getColumnCount(); i++) {
            TableColumn column = tcm.getColumn(i);
            column.setPreferredWidth(44);
        }
        TableColumn column = tcm.getColumn(1);
        column.setPreferredWidth(160);
    }//GEN-LAST:event_formInternalFrameOpened


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField S1_0;
    private javax.swing.JTextField S1_1;
    private javax.swing.JTextField S1_2;
    private javax.swing.JTextField S1_3;
    private javax.swing.JTextField S1_4;
    private javax.swing.JTextField S1_5;
    private javax.swing.JTextField S1_6;
    private javax.swing.JTextField S1_7;
    private javax.swing.JTextField S1_8;
    private javax.swing.JTextField S1_9;
    private javax.swing.JComboBox<String> Select_Strip;
    private javax.swing.JButton btnCalculate;
    private javax.swing.JButton btnContinue1;
    private javax.swing.JButton btnSaveRow;
    private javax.swing.JComboBox<String> cmbMonth;
    private javax.swing.JComboBox<String> cmbYear;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel month;
    private javax.swing.JLabel sheet_name;
    private javax.swing.JButton showData;
    private javax.swing.JLabel strip_name;
    private javax.swing.JLabel year;
    // End of variables declaration//GEN-END:variables
}
